<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Форма внесения данных в расписание</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f4;
            color: #333;
        }

        h2 {
            text-align: center;
            color: #007bff;
        }

        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            margin: 0 auto;
        }

        label {
            display: block;
            margin-top: 10px;
            font-weight: bold;
        }

        input[type="text"], input[type="date"], select {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        input[type="submit"] {
            margin-top: 20px;
            padding: 10px 15px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        input[type="submit"]:hover {
            background-color: #218838;
        }

        .error-message {
            color: red;
            margin-top: 10px;
            display: none;
        }

        select {
            appearance: none;
            background-size: 12px;
            padding-right: 30px;
        }
    </style>
</head>
<body>

<h2>Форма внесения данных в расписание поездок</h2>
<form id="scheduleForm">
    <label for="region">Регион:</label>
    <select id="region" name="region" onchange="calculateArrivalDate()">
        <option value="">Выберите регион</option>
        {% for region in regions %}
            <option value="{{ region.regionName }}" data-duration="{{ region.duration }}">{{ region.regionName }} ({{ region.duration }})</option>
        {% endfor %}
    </select>

    <label for="departure">Дата выезда из Москвы:</label>
    <input type="date" id="departure" name="departure" required onchange="calculateArrivalDate()">

    <label for="name">ФИО курьера:</label>
    <input type="text" id="name" name="name" required>

    <label for="arrivalDate">Дата прибытия в регион:</label>
    <input type="text" id="arrivalDate" name="arrivalDate" readonly>

    <input type="submit" value="Отправить">

    <div class="error-message" id="error-message"></div>
</form>

<script>
    function calculateArrivalDate() {
        const regionSelect = document.getElementById("region");
        const departureDateInput = document.getElementById("departure");
        const arrivalDateInput = document.getElementById("arrivalDate");

        const selectedOption = regionSelect.options[regionSelect.selectedIndex];
        const travelDuration = selectedOption.getAttribute("data-duration");

        if (selectedOption.value && departureDateInput.value) {
            const departureDate = new Date(departureDateInput.value);
            departureDate.setDate(departureDate.getDate() + Number(travelDuration));
            arrivalDateInput.value = departureDate.toISOString().split("T")[0];
        } else {
            arrivalDateInput.value = "";
        }
    }

    document.getElementById("scheduleForm").addEventListener("submit", function(event) {
        event.preventDefault();

        const formData = {
            region: document.getElementById("region").value,
            departure: document.getElementById("departure").value,
            name: document.getElementById("name").value
        };

        console.log(JSON.stringify(formData));

        fetch(window.location.origin +'/api/create_route', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        throw new Error(text);
                    });
                }
                return response.json();
            })
            .then(data => {
                alert('Маршрут успешно создан.')
                document.getElementById("error-message").textContent = "";
            })
            .catch(error => {
                document.getElementById("error-message").textContent = error.message;
                document.getElementById("error-message").style.display = 'block';
            });
    });
</script>

</body>
</html>